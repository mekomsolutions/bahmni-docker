<databaseChangeLog logicalFilePath="openerp-atomfeed-service/sql/db_migrations.xml"
                   xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <changeSet context="setup-markers" author="Vikash" id="201605201045">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="markers"/></not>
        </preConditions>
        <createTable tableName="markers" schemaName="public">
            <column name="id" type="serial" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="feed_uri_for_last_read_entry" type="varchar(250)">
                <constraints nullable="false"/>
            </column>
            <column name="feed_uri" type="varchar(250)">
                <constraints nullable="false"/>
            </column>
            <column name="last_read_entry_id" type="varchar(250)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="BAHMNI-ERP-CONNECT:201907031814" context="0.92" author="Angshu">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="event_records"/></not>
        </preConditions>
        <createTable tableName="event_records" schemaName="public">
            <column name="id" type="serial">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="uuid" type="varchar(40)"/>
            <column name="title" type="varchar(255)"/>
            <column name="timestamp" type="timestamp" defaultValueDate="CURRENT_TIMESTAMP"/>
            <column name="uri" type="varchar(255)"/>
            <column name="object" type="varchar(1000)"/>
            <column name="category" type="varchar(255)"/>
            <column name="date_created" type="TIMESTAMP" defaultValueDate="CURRENT_TIMESTAMP"/>
            <column name="tags" type="varchar(255)"></column>
        </createTable>
    </changeSet>

    <changeSet context="setup" author="ict4h" id="100">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="failed_events"/></not>
        </preConditions>
        <createTable tableName="failed_events" schemaName="public">
            <column name="id" type="serial">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="feed_uri" type="varchar(255)"/>
            <column name="failed_at" type="timestamp"/>
            <!-- TODO: change to CLOB -->
            <column name="error_message" type="varchar(4000)"/>
            <column name="event_id" type="varchar(255)"/>
            <!-- TODO: change to CLOB -->
            <column name="event_content" type="varchar(4000)"/>
        </createTable>
    </changeSet>
    <changeSet id="101" author="ict4h">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="chunking_history"/></not>
        </preConditions>
        <createTable tableName="chunking_history" schemaName="public">
            <column name="id" type="int">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="chunk_length" type="BIGINT"/>
            <column name="start" type="BIGINT">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <addAutoIncrement tableName="chunking_history" columnName="id" columnDataType="int"/>
    </changeSet>
    <changeSet id="102" author="ict4h">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">select count(*) from chunking_history where start=1</sqlCheck>
        </preConditions>
        <insert tableName="chunking_history" schemaName="public">
            <column name="chunk_length" valueNumeric="5"></column>
            <column name="start" valueNumeric="1"></column>
        </insert>
    </changeSet>
    <changeSet id="103" author="ict4h">
        <preConditions onFail="MARK_RAN">
            <not><columnExists tableName="failed_events" columnName="error_hash_code"/></not>
        </preConditions>
        <addColumn tableName="failed_events" schemaName="public">
            <column name="error_hash_code" type="int" />
        </addColumn>
    </changeSet>
	<changeSet author="ict4h" id="104">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="event_records_offset_marker"/></not>
        </preConditions>
	    <createTable tableName="event_records_offset_marker" schemaName="public">
	       <column name="id" type="int" autoIncrement="true">
	          <constraints nullable="false" primaryKey="true"/>
	       </column>
	       <column name="event_id" type="int"/>
	       <column name="event_count" type="int"/>
	       <column name="category" type="varchar(255)"/>
	    </createTable>
	</changeSet>
    <changeSet id="105" author="ict4h">
        <preConditions onFail="MARK_RAN">
            <not><columnExists tableName="failed_events" columnName="title"/></not>
        </preConditions>
        <addColumn tableName="failed_events" schemaName="public">
            <column name="title" type="varchar(255)" />
        </addColumn>
    </changeSet>
    <changeSet id="106" author="tw">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="quartz_cron_scheduler"/></not>
        </preConditions>
        <createTable tableName="quartz_cron_scheduler" schemaName="public">
            <column name="id" type="int" autoIncrement="true">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="name" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="cron_statement" type="varchar(32)">
                <constraints nullable="false"/>
            </column>
            <column name="start_delay" type="int" defaultValue="0">
                <constraints nullable="false"/>
            </column>
            <column name="enabled" type="boolean"/>
        </createTable>
    </changeSet>
    <changeSet id="102-1" author="Possible">
        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists columnName="retries" tableName="failed_events" schemaName="public"/>
            </not>
        </preConditions>
        <addColumn tableName="failed_events" schemaName="public" >
            <column name="retries" type="int"
                    defaultValueNumeric="0">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>
    <changeSet id="102-2" author="Possible">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="failed_event_retry_log"/></not>
        </preConditions>
        <createTable tableName="failed_event_retry_log" schemaName="public">
            <column name="id" type="serial">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="feed_uri" type="varchar(255)"/>
            <column name="failed_at" type="timestamp"/>
            <column name="error_message" type="varchar(4000)"/>
            <column name="event_id" type="varchar(255)"/>
            <column name="event_content" type="varchar(4000)"/>
            <column name="error_hash_code" type="int"/>
        </createTable>
    </changeSet>
    <changeSet author="Hemanth" id="14092015080020" context="bahmni">
        <preConditions onFail="MARK_RAN">
            <not><tableExists tableName="event_records_queue"/></not>
        </preConditions>
        <createTable tableName="event_records_queue" schemaName="public">
            <column name="id" type="serial">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="uuid" type="varchar(40)"/>
            <column name="title" type="varchar(255)"/>
            <column name="timestamp" type="timestamp" defaultValueDate="CURRENT_TIMESTAMP(6)"/>
            <column name="uri" type="varchar(255)"/>
            <!-- TODO: Change to CLOB -->
            <column name="object" type="varchar(1000)"/>
            <column name="category" type="varchar(255)"></column>
        </createTable>

    </changeSet>

    <changeSet id="011929161228" context="bahmni" author="Shashi, Hanisha">
        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists columnName="tags" tableName="failed_events" schemaName="public"/>
            </not>
        </preConditions>
        <comment>Creating column tags for failed_events table. This is same as atom spec feed.entry.categories.</comment>
        <addColumn tableName="failed_events" schemaName="public">
            <column name="tags" type="varchar(255)"/>
        </addColumn>
    </changeSet>

    <changeSet id="270420161204" author="Chethan" context="bahmni">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                select count(*) from quartz_cron_scheduler where name = 'eventRecordsNumberOffsetMarkerTrigger';
            </sqlCheck>
        </preConditions>
        <comment>eventRecordsNumberOffsetMarkerTrigger job to be run at 12 am every day</comment>
        <update tableName="quartz_cron_scheduler" schemaName="public">
            <column name="cron_statement" value="0 0 0 1/1 * ? *"/>
            <where>name='eventRecordsNumberOffsetMarkerTrigger'</where>
        </update>
    </changeSet>
    <changeSet id="atomfeed-201604221140" context="bahmni" author="angshu, dubey" >
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                select count(i.relname)
                from pg_class t,
                pg_class i,
                pg_index ix,
                pg_attribute a
                where
                t.oid = ix.indrelid
                and i.oid = ix.indexrelid
                and a.attrelid = t.oid
                and a.attnum = ANY(ix.indkey)
                and t.relkind = 'r'
                and t.relname = 'event_records'
                and i.relname = 'event_records_category_idx'
            </sqlCheck>
        </preConditions>
        <comment>Add index to the category column in event_records table for performance (if it is not already present)</comment>
        <createIndex tableName="event_records" indexName="event_records_category_idx">
            <column name="category"/>
        </createIndex>
    </changeSet>
    <changeSet id="atomfeed-201604221141" context="bahmni" author="angshu, dubey">
        <validCheckSum>3:6501c89cc91d7f2751b557eda804c8bd</validCheckSum>
        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists columnName="date_created" tableName="event_records" schemaName="public"/>
            </not>
        </preConditions>
        <comment>Creating column date_created for queue table. This indicates the time event was raised or created.</comment>
        <addColumn tableName="event_records" schemaName="public">
            <column name="date_created" type="timestamp"></column>
        </addColumn>
    </changeSet>

    <changeSet id="20160714-2017-1" author="Jaswanth,Padma" context="bahmni">
        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists columnName="tags" tableName="event_records_queue"/>
            </not>
        </preConditions>
        <comment>Creating column tags for queue table. Each event can be tagged with multiple tags; as comma separated strings</comment>
        <addColumn tableName="event_records_queue">
            <column name="tags" type="varchar(255)"></column>
        </addColumn>
    </changeSet>

    <changeSet id="20160714-2017-2" author="Jaswanth,Padma" context="bahmni">
        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists columnName="tags" tableName="event_records"/>
            </not>
        </preConditions>
        <comment>Creating column tags for event_records table. Each event can be tagged with multiple tags; as comma separated strings</comment>
        <addColumn tableName="event_records">
            <column name="tags" type="varchar(255)"></column>
        </addColumn>
    </changeSet>

</databaseChangeLog>